{"version":3,"sources":["components/MatchDetailCard.js","components/MatchSmallCard.js","components/WinLoss.js","pages/TeamPage.js","components/YearSelector.js","pages/MatchPage.js","components/TeamTile.js","pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["MatchDetailCard","teamName","match","otherTeam","team1","team2","otherTeamRoute","className","to","date","venue","tossWinner","tossDecision","matchWinner","resultMargin","result","playerOfMatch","umpire1","umpire2","MatchSmallCard","WinLoss","totalWins","totalMatches","data","title","value","color","TeamPage","useState","team","setTeam","useParams","useEffect","fetchMatches","a","fetch","process","response","json","console","log","matches","slice","map","id","YearSelector","years","i","push","year","MatchPage","setMatches","TeamTile","HomePage","teams","setTeams","fetchAllTeams","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6d7a928e.chunk.js","sourcesContent":["import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchDetailCard.scss';\r\n\r\nexport const MatchDetailCard = ({teamName, match}) => {\r\n  if (!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  return (\r\n    <div className=\"MatchDetailCard\">\r\n        <div>\r\n            <span className=\"vs\">vs</span>\r\n            <h1><Link to={otherTeamRoute}>{otherTeam}</Link></h1>\r\n            <h2 className=\"match-date\">on {match.date}</h2>\r\n            <h3 className=\"match-venue\">at {match.venue}</h3>\r\n            <h3> {match.tossWinner} won the toss and elected to {match.tossDecision} first</h3>\r\n        </div>\r\n        <div className=\"result-award-other-detail\">\r\n             <h2>{match.matchWinner} won by {match.resultMargin} {match.result}</h2>\r\n             <h2>Player of the Match : {match.playerOfMatch} </h2>\r\n             <h3> Umpires </h3>\r\n             <h4> {match.umpire1} And {match.umpire2} </h4>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchDetailCard;\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './MatchSmallCard.scss'\r\n\r\nexport const MatchSmallCard = ({teamName, match}) => {\r\n  if (!match) return null;\r\n  const otherTeam = match.team1 === teamName ? match.team2 : match.team1;\r\n  const otherTeamRoute = `/teams/${otherTeam}`;\r\n  return (\r\n    <div className=\"MatchSmallCard\">\r\n        <span className=\"vs\">vs</span>\r\n        <h3><Link to={otherTeamRoute}>{otherTeam}</Link></h3>\r\n        <p className=\"match-result\">{match.matchWinner} won by {match.resultMargin} {match.result}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MatchSmallCard;\r\n","import { React } from 'react';\r\nimport { PieChart } from 'react-minimal-pie-chart';\r\n\r\nexport const WinLoss = ({totalWins, totalMatches}) => {\r\n  return (\r\n    <div className=\"WinLoss\">\r\n        <PieChart\r\n        data={[\r\n            {title: 'Losses', value: totalMatches - totalWins, color: '#a34d5d'},\r\n            {title: 'Wins', value: totalWins, color: '#4da375'}\r\n        ]}\r\n        />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WinLoss;","import './TeamPage.scss';\r\nimport { React, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard'\r\nimport { MatchSmallCard } from '../components/MatchSmallCard'\r\nimport { WinLoss } from '../components/WinLoss'\r\nimport { useParams } from 'react-router-dom'\r\n\r\n\r\nexport const TeamPage = () => {\r\n     const [team, setTeam] = useState([]);\r\n     const { teamName } = useParams();\r\n     useEffect(\r\n        () => {\r\n            const fetchMatches = async () =>{\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}`);\r\n                const data = await response.json();\r\n                console.log(data);\r\n                setTeam(data);\r\n            };\r\n            fetchMatches();\r\n        }, [teamName]\r\n     );\r\n  if(!team.teamName || !team){\r\n      return <h1>404 Resource not found</h1>\r\n  }\r\n  return (\r\n    <div className=\"TeamPage\">\r\n       <div className=\"home-page-section\">\r\n             <Link to={`/`}>Return to Home Page</Link>\r\n       </div>\r\n        <div className=\"team-name-section\">\r\n            <h1 className=\"team-name\">{team.teamName}</h1>\r\n        </div>\r\n        <div className=\"wins-losses-section\">\r\n            Wins / Losses\r\n            <WinLoss totalWins={team.totalWins} totalMatches={team.totalMatches}/>\r\n        </div>\r\n        <div className=\"match-detail-section\">\r\n            <h2>Latest Match</h2>\r\n            <MatchDetailCard teamName={team.teamName} match={team.matches[0]}/>\r\n        </div>\r\n            {team.matches.slice(1).map(match => <MatchSmallCard key={match.id} teamName={team.teamName} match={match}/>)}\r\n        <div className=\"more-link\">\r\n            <Link to={`/teams/${teamName}/matches/${process.env.REACT_APP_DATA_END_YEAR}`}>More</Link>\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TeamPage;\r\n","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './YearSelector.scss';\r\n\r\nexport const YearSelector = ({teamName}) => {\r\n   let years=[];\r\n   const startYear = process.env.REACT_APP_DATA_START_YEAR;\r\n   const endYear = process.env.REACT_APP_DATA_END_YEAR;\r\n   for(let i = endYear; i >= startYear; i--){\r\n      years.push(i);\r\n   }\r\n  return (\r\n    <ol className=\"YearSelector\">\r\n        {\r\n            years.map(year => (\r\n            <li key={year}>\r\n                <Link to={`/teams/${teamName}/matches/${year}`}>{year}</Link>\r\n            </li>)\r\n            )\r\n        }\r\n    </ol>\r\n  );\r\n}\r\n\r\n","import { React, useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { MatchDetailCard } from '../components/MatchDetailCard';\r\nimport { YearSelector } from '../components/YearSelector';\r\nimport './MatchPage.scss'\r\n\r\nexport const MatchPage = () => {\r\n\r\n    const [matches, setMatches] = useState([]);\r\n    const { teamName, year } = useParams();\r\n    useEffect(\r\n        () => {\r\n         const fetchMatches = async () => {\r\n            const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/team/${teamName}/matches?year=${year}`);\r\n            const data = await response.json();\r\n            console.log(data);\r\n            setMatches(data);\r\n\r\n         };\r\n         fetchMatches();\r\n        }, [teamName, year]\r\n    );\r\n\r\n\r\n    return (\r\n        <div className=\"MatchPage\">\r\n            <div className=\"home-page-section\">\r\n                 <Link to={`/`}>Return to Home Page</Link>\r\n           </div>\r\n            <div className=\"year-selector\">\r\n                <h3>Select Year</h3>\r\n                <YearSelector teamName={teamName}/>\r\n            </div>\r\n            <div>\r\n                  <h1 className=\"page-heading\">{teamName} Matches in {year}</h1>\r\n                    {\r\n                        matches.map(match => <MatchDetailCard key={match.id} teamName={teamName} match={match} />)\r\n                    }\r\n            </div>\r\n        </div>\r\n    );\r\n}","import { React } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './TeamTile.scss';\r\n\r\nexport const TeamTile = ({teamName}) => {\r\n  return (\r\n    <div className=\"TeamTile\">\r\n            <h1>\r\n                <Link to={`/teams/${teamName}`}>\r\n                    {teamName}\r\n                </Link>\r\n            </h1>\r\n     </div>\r\n  );\r\n}\r\n","import './HomePage.scss';\r\nimport { React, useEffect, useState } from 'react';\r\nimport { TeamTile } from '../components/TeamTile'\r\n\r\n\r\nexport const HomePage = () => {\r\n     const [teams, setTeams] = useState([]);\r\n     useEffect(\r\n        () => {\r\n            const fetchAllTeams = async () =>{\r\n                const response = await fetch(`${process.env.REACT_APP_API_ROOT_URL}/teams`);\r\n                const data = await response.json();\r\n                console.log(data);\r\n                setTeams(data);\r\n            };\r\n            fetchAllTeams();\r\n        }, []\r\n     );\r\n\r\n  return (\r\n    <div className=\"HomePage\">\r\n        <div className=\"header-section\">\r\n            <h1 className=\"app-name\">Cricket Dashboard</h1>\r\n        </div>\r\n        <div className=\"team-grid\">\r\n            {teams.map(team => <TeamTile key={team.teamName} teamName={team.teamName}/>)}\r\n        </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n","import './App.scss';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport { TeamPage } from './pages/TeamPage';\nimport { MatchPage } from './pages/MatchPage';\nimport { HomePage } from './pages/HomePage';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n         <Router>\n             <Switch>\n                 <Route path=\"/teams/:teamName/matches/:year\">\n                   <MatchPage />\n                 </Route>\n                 <Route path=\"/teams/:teamName\">\n                   <TeamPage />\n                 </Route>\n                 <Route path=\"/\">\n                    <HomePage />\n                 </Route>\n             </Switch>\n         </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}